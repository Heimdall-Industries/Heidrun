/// <reference types="node" />
import { PublicKey } from '@solana/web3.js';
export declare function byteArrayToString(array: number[]): string;
export declare function stringToByteArray(str: string, length: number): any[];
export declare function byteArrayToLong(byteArray: Buffer): number;
export declare function longToByteArray(long: number): number[];
/**
 * Helper function to switch case string inputs for faction filter
 */
export declare function convertFactionStringToNum(factionName: string): Promise<number>;
/**
 * Get associated token address
 *
 * @param owner - the public key that owns the associated token address
 * @param mint - the mint
 * @returns a promise of the associated token address
 */
export declare function getAssociatedTokenAddress(owner: PublicKey, mint: PublicKey): Promise<PublicKey>;
//# sourceMappingURL=helpers.d.ts.map