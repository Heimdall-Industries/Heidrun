/// <reference types="node" />
import { web3 } from '@project-serum/anchor';
export declare enum FactionType {
    Unenlisted = -1,
    MUD = 0,
    ONI = 1,
    Ustur = 2
}
export interface PlayerFaction {
    owner: web3.PublicKey;
    enlistedAtTimestamp: number;
    factionId: number;
    bump: number;
    padding: Buffer;
}
export declare function getIDL(programId: web3.PublicKey): any;
export declare function getPlayerFactionPDA(playerPublicKey: web3.PublicKey, programId: web3.PublicKey): Promise<[web3.PublicKey, number]>;
/**
 *  Create transaction instruction which can be used to enlist a player to a faction.
 */
export declare function enlistToFaction(connection: web3.Connection, factionID: FactionType, playerPublicKey: web3.PublicKey, programId: web3.PublicKey): Promise<web3.TransactionInstruction>;
/**
 * Get a player's faction information
 */
export declare function getPlayer(connection: web3.Connection, playerPublicKey: web3.PublicKey, programId: web3.PublicKey): Promise<PlayerFaction>;
/**
 * Get all players
 */
export declare function getAllPlayers(connection: web3.Connection, programId: web3.PublicKey): Promise<PlayerFaction[]>;
/**
 * Get all players of a specified faction
 */
export declare function getPlayersOfFaction(connection: web3.Connection, factionID: FactionType, programId: web3.PublicKey): Promise<PlayerFaction[]>;
//# sourceMappingURL=factions.d.ts.map